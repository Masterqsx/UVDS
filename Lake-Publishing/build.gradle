plugins {
    id 'java'
    id 'idea'
    id 'eclipse'
    id 'org.springframework.boot' version '2.0.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.6.RELEASE'
}

jar {
    baseName = 'Lake-Publishing'
    version = project.properties['version']
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-jersey'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.apache.commons:commons-lang3:3.8'
    implementation 'commons-io:commons-io:2.6'
    implementation 'org.apache.hbase:hbase-client:2.1.0'
    implementation 'org.apache.hbase:hbase:2.1.0'
    implementation project(':Lake-Onboarding')
    implementation project(':UVDS-Common')

    testImplementation 'org.slf4j:slf4j-api:1.7.25'
    testImplementation 'org.slf4j:slf4j-simple:1.7.25'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.glassfish.jersey.test-framework:jersey-test-framework-core:2.27'
    testImplementation 'org.glassfish.jersey.test-framework.providers:jersey-test-framework-provider-inmemory:2.27'
}

task hbaseRemove(type: JavaExec) {
    classpath = sourceSets.test.runtimeClasspath

    main = 'com.parabird.uvds.dataLake.publishing.hbase.helper.HBaseDbRemove'
}

task hbaseCreate(type: JavaExec) {
    mustRunAfter 'hbaseRemove'

    classpath = sourceSets.test.runtimeClasspath

    main = 'com.parabird.uvds.dataLake.publishing.hbase.helper.HBaseDbCreate'
}

task hbaseRecreate {
    dependsOn 'hbaseRemove', 'hbaseCreate'
}

task datastoreRecreate {
    dependsOn 'hbaseRecreate'
}